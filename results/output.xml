<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0 (Python 3.13.1 on win32)" generated="20250207 22:01:57.502" rpa="false" schemaversion="3">
<suite id="s1" name="User" source="D:\Projects\robot-api-python-cicd-github\tests\user.robot">
<kw name="Start session" library="settings" type="SETUP">
<doc>Start session</doc>
<kw name="Generate Token" library="settings">
<doc>Generate token</doc>
<kw name="Request body" library="settings">
<arg>${validCredentials}</arg>
<doc>Request body</doc>
<kw name="Load JSON From File" library="JSONLibrary">
<var>${data}</var>
<arg>${path}</arg>
<doc>Load JSON from file.</doc>
<msg timestamp="20250207 22:01:57.630" level="INFO">${data} = {'email': 'eve.holt@reqres.in', 'password': 'cityslicka'}</msg>
<status status="PASS" starttime="20250207 22:01:57.630" endtime="20250207 22:01:57.630"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${data}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250207 22:01:57.630" level="INFO">${data} = {'email': 'eve.holt@reqres.in', 'password': 'cityslicka'}</msg>
<status status="PASS" starttime="20250207 22:01:57.630" endtime="20250207 22:01:57.630"/>
</kw>
<status status="PASS" starttime="20250207 22:01:57.629" endtime="20250207 22:01:57.630"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}${EP_LOGIN}</arg>
<arg>json=${data}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20250207 22:01:58.332" level="INFO">POST Request : url=https://reqres.in/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '57', 'Content-Type': 'application/json'} 
 body=b'{"email": "eve.holt@reqres.in", "password": "cityslicka"}' 
 </msg>
<msg timestamp="20250207 22:01:58.332" level="INFO">POST Response : url=https://reqres.in/api/login 
 status=200, reason=OK 
 headers={'Date': 'Sat, 08 Feb 2025 01:01:49 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '29', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738976509&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=uC2zFrKVdnbCajJA0vs0%2BM1Qz5sQev3YwLUVv2i0TRk%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738976509&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=uC2zFrKVdnbCajJA0vs0%2BM1Qz5sQev3YwLUVv2i0TRk%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Etag': 'W/"1d-lGCrvD6B7Qzk11+2C98+nGhhuec"', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e7b0cfaad300d7-GRU', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=7610&amp;min_rtt=7409&amp;rtt_var=3181&amp;sent=6&amp;recv=6&amp;lost=0&amp;retrans=0&amp;sent_bytes=2835&amp;recv_bytes=900&amp;delivery_rate=452328&amp;cwnd=252&amp;unsent_bytes=0&amp;cid=d3b89cecd479577a&amp;ts=395&amp;x=0"'} 
 body={"token":"QpwL5tke4Pnpja7X4"} 
 </msg>
<msg timestamp="20250207 22:01:58.332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250207 22:01:57.630" endtime="20250207 22:01:58.332"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${AUTH_TOKEN}</arg>
<arg>${response.json()['token']}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250207 22:01:58.333" level="INFO">${AUTH_TOKEN} = QpwL5tke4Pnpja7X4</msg>
<status status="PASS" starttime="20250207 22:01:58.332" endtime="20250207 22:01:58.333"/>
</kw>
<status status="PASS" starttime="20250207 22:01:57.629" endtime="20250207 22:01:58.333"/>
</kw>
<status status="PASS" starttime="20250207 22:01:57.629" endtime="20250207 22:01:58.333"/>
</kw>
<test id="s1-t1" name="Listar todos os usuários paginados" line="8">
<kw name="Dado que realize uma pesquisa de usuarios" library="users_keywords">
<doc>Realizar uma pesquisa de usuarios</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{page}</var>
<arg>page=1</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250207 22:01:58.334" level="INFO">&amp;{page} = { page=1 }</msg>
<status status="PASS" starttime="20250207 22:01:58.334" endtime="20250207 22:01:58.334"/>
</kw>
<kw name="Headers" library="settings">
<doc>Headers</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type=application/json</arg>
<arg>Accept=application/json</arg>
<arg>Authorization=Bearer ${AUTH_TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250207 22:01:58.334" level="INFO">${headers} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer QpwL5tke4Pnpja7X4'}</msg>
<status status="PASS" starttime="20250207 22:01:58.334" endtime="20250207 22:01:58.334"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${HEADERS}</arg>
<arg>${headers}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250207 22:01:58.334" level="INFO">${HEADERS} = {'Content-Type': 'application/json', 'Accept': 'application/json', 'Authorization': 'Bearer QpwL5tke4Pnpja7X4'}</msg>
<status status="PASS" starttime="20250207 22:01:58.334" endtime="20250207 22:01:58.334"/>
</kw>
<status status="PASS" starttime="20250207 22:01:58.334" endtime="20250207 22:01:58.334"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>url=${BASE_URL}${EP_LIST_USERS}</arg>
<arg>params=&amp;{page}</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20250207 22:01:58.653" level="INFO">GET Request : url=https://reqres.in/api/users?page=1 
 path_url=/api/users?page=1 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer QpwL5tke4Pnpja7X4'} 
 body=None 
 </msg>
<msg timestamp="20250207 22:01:58.653" level="INFO">GET Response : url=https://reqres.in/api/users?page=1 
 status=200, reason=OK 
 headers={'Date': 'Sat, 08 Feb 2025 01:01:50 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738958103&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=j%2FzVDZwv0HsbPl91An6JP70jxsfHhn9PHl%2F5VLqg378%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738958103&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=j%2FzVDZwv0HsbPl91An6JP70jxsfHhn9PHl%2F5VLqg378%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Etag': 'W/"41e-bY3U72nulxuwNd/TmihMEHjLmek"', 'Via': '1.1 vegur', 'Cache-Control': 'max-age=14400', 'CF-Cache-Status': 'HIT', 'Age': '1306', 'Vary': 'Accept-Encoding', 'Server': 'cloudflare', 'CF-RAY': '90e7b0d40d85f179-GRU', 'Content-Encoding': 'gzip', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=7408&amp;min_rtt=7227&amp;rtt_var=3073&amp;sent=5&amp;recv=5&amp;lost=0&amp;retrans=0&amp;sent_bytes=2835&amp;recv_bytes=861&amp;delivery_rate=470046&amp;cwnd=252&amp;unsent_bytes=0&amp;cid=a93a2b3a0493e237&amp;ts=21&amp;x=0"'} 
 body={"page":1,"per_page":6,"total":12,"total_pages":2,"data":[{"id":1,"email":"george.bluth@reqres.in","first_name":"George","last_name":"Bluth","avatar":"https://reqres.in/img/faces/1-image.jpg"},{"id":2,"email":"janet.weaver@reqres.in","first_name":"Janet","last_name":"Weaver","avatar":"https://reqres.in/img/faces/2-image.jpg"},{"id":3,"email":"emma.wong@reqres.in","first_name":"Emma","last_name":"Wong","avatar":"https://reqres.in/img/faces/3-image.jpg"},{"id":4,"email":"eve.holt@reqres.in","first_name":"Eve","last_name":"Holt","avatar":"https://reqres.in/img/faces/4-image.jpg"},{"id":5,"email":"charles.morris@reqres.in","first_name":"Charles","last_name":"Morris","avatar":"https://reqres.in/img/faces/5-image.jpg"},{"id":6,"email":"tracey.ramos@reqres.in","first_name":"Tracey","last_name":"Ramos","avatar":"https://reqres.in/img/faces/6-image.jpg"}],"support":{"url":"https://contentcaddy.io?utm_source=reqres&amp;utm_medium=json&amp;utm_campaign=referral","text":"Tired of writing endless social media content? Let Content Caddy generate it for you."}} 
 </msg>
<msg timestamp="20250207 22:01:58.656" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250207 22:01:58.334" endtime="20250207 22:01:58.656"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250207 22:01:58.657" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250207 22:01:58.656" endtime="20250207 22:01:58.657"/>
</kw>
<status status="PASS" starttime="20250207 22:01:58.333" endtime="20250207 22:01:58.657"/>
</kw>
<kw name="Então é apresentada a lista de usuarios" library="users_keywords">
<doc>É apresentada a lista de usuarios</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20250207 22:01:58.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250207 22:01:58.657" endtime="20250207 22:01:58.658"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.json()['page']}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20250207 22:01:58.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250207 22:01:58.658" endtime="20250207 22:01:58.658"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${response.json()}</arg>
<arg>per_page</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.658" endtime="20250207 22:01:58.659"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${response.json()}</arg>
<arg>total</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.659" endtime="20250207 22:01:58.659"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${response.json()}</arg>
<arg>total_pages</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.659" endtime="20250207 22:01:58.659"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${listaDeUsuarios}</var>
<arg>${response.json()}</arg>
<arg>data</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20250207 22:01:58.660" level="INFO">${listaDeUsuarios} = [{'id': 1, 'email': 'george.bluth@reqres.in', 'first_name': 'George', 'last_name': 'Bluth', 'avatar': 'https://reqres.in/img/faces/1-image.jpg'}, {'id': 2, 'email': 'janet.weaver@reqres.in', 'first_na...</msg>
<status status="PASS" starttime="20250207 22:01:58.659" endtime="20250207 22:01:58.660"/>
</kw>
<for flavor="IN">
<var>${perfilUsuario}</var>
<value>@{listaDeUsuarios}</value>
<iter>
<var name="${perfilUsuario}">{'id': 1, 'email': 'george.bluth@reqres.in', 'first_name': 'George', 'last_name': 'Bluth', 'avatar': 'https://reqres.in/img/faces/1-image.jpg'}</var>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.660" endtime="20250207 22:01:58.660"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.660" endtime="20250207 22:01:58.660"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>first_name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.660" endtime="20250207 22:01:58.660"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>last_name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.660" endtime="20250207 22:01:58.660"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>avatar</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.660" endtime="20250207 22:01:58.660"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${perfilUsuario}[id] &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250207 22:01:58.660" endtime="20250207 22:01:58.661"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[email]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.661" level="INFO">Length is 22</msg>
<status status="PASS" starttime="20250207 22:01:58.661" endtime="20250207 22:01:58.661"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[first_name]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.661" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20250207 22:01:58.661" endtime="20250207 22:01:58.661"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[last_name]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.661" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20250207 22:01:58.661" endtime="20250207 22:01:58.661"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[avatar]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.664" level="INFO">Length is 39</msg>
<status status="PASS" starttime="20250207 22:01:58.661" endtime="20250207 22:01:58.664"/>
</kw>
<status status="PASS" starttime="20250207 22:01:58.660" endtime="20250207 22:01:58.664"/>
</iter>
<iter>
<var name="${perfilUsuario}">{'id': 2, 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'last_name': 'Weaver', 'avatar': 'https://reqres.in/img/faces/2-image.jpg'}</var>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.664" endtime="20250207 22:01:58.664"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.665" endtime="20250207 22:01:58.665"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>first_name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.665" endtime="20250207 22:01:58.665"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>last_name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.665" endtime="20250207 22:01:58.665"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>avatar</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.665" endtime="20250207 22:01:58.665"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${perfilUsuario}[id] &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250207 22:01:58.665" endtime="20250207 22:01:58.665"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[email]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.666" level="INFO">Length is 22</msg>
<status status="PASS" starttime="20250207 22:01:58.665" endtime="20250207 22:01:58.666"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[first_name]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.666" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20250207 22:01:58.666" endtime="20250207 22:01:58.666"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[last_name]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.666" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20250207 22:01:58.666" endtime="20250207 22:01:58.666"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[avatar]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.666" level="INFO">Length is 39</msg>
<status status="PASS" starttime="20250207 22:01:58.666" endtime="20250207 22:01:58.666"/>
</kw>
<status status="PASS" starttime="20250207 22:01:58.664" endtime="20250207 22:01:58.666"/>
</iter>
<iter>
<var name="${perfilUsuario}">{'id': 3, 'email': 'emma.wong@reqres.in', 'first_name': 'Emma', 'last_name': 'Wong', 'avatar': 'https://reqres.in/img/faces/3-image.jpg'}</var>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.666" endtime="20250207 22:01:58.666"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.666" endtime="20250207 22:01:58.666"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>first_name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.666" endtime="20250207 22:01:58.667"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>last_name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.667" endtime="20250207 22:01:58.667"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>avatar</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.667" endtime="20250207 22:01:58.667"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${perfilUsuario}[id] &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250207 22:01:58.667" endtime="20250207 22:01:58.667"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[email]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.667" level="INFO">Length is 19</msg>
<status status="PASS" starttime="20250207 22:01:58.667" endtime="20250207 22:01:58.667"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[first_name]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.667" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20250207 22:01:58.667" endtime="20250207 22:01:58.667"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[last_name]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.667" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20250207 22:01:58.667" endtime="20250207 22:01:58.667"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[avatar]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.668" level="INFO">Length is 39</msg>
<status status="PASS" starttime="20250207 22:01:58.667" endtime="20250207 22:01:58.668"/>
</kw>
<status status="PASS" starttime="20250207 22:01:58.666" endtime="20250207 22:01:58.668"/>
</iter>
<iter>
<var name="${perfilUsuario}">{'id': 4, 'email': 'eve.holt@reqres.in', 'first_name': 'Eve', 'last_name': 'Holt', 'avatar': 'https://reqres.in/img/faces/4-image.jpg'}</var>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.668" endtime="20250207 22:01:58.668"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.668" endtime="20250207 22:01:58.668"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>first_name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.668" endtime="20250207 22:01:58.668"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>last_name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.668" endtime="20250207 22:01:58.668"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>avatar</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.668" endtime="20250207 22:01:58.668"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${perfilUsuario}[id] &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250207 22:01:58.669" endtime="20250207 22:01:58.669"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[email]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.669" level="INFO">Length is 18</msg>
<status status="PASS" starttime="20250207 22:01:58.669" endtime="20250207 22:01:58.669"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[first_name]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.669" level="INFO">Length is 3</msg>
<status status="PASS" starttime="20250207 22:01:58.669" endtime="20250207 22:01:58.669"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[last_name]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.669" level="INFO">Length is 4</msg>
<status status="PASS" starttime="20250207 22:01:58.669" endtime="20250207 22:01:58.669"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[avatar]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.669" level="INFO">Length is 39</msg>
<status status="PASS" starttime="20250207 22:01:58.669" endtime="20250207 22:01:58.669"/>
</kw>
<status status="PASS" starttime="20250207 22:01:58.668" endtime="20250207 22:01:58.669"/>
</iter>
<iter>
<var name="${perfilUsuario}">{'id': 5, 'email': 'charles.morris@reqres.in', 'first_name': 'Charles', 'last_name': 'Morris', 'avatar': 'https://reqres.in/img/faces/5-image.jpg'}</var>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.669" endtime="20250207 22:01:58.669"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.669" endtime="20250207 22:01:58.670"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>first_name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.670" endtime="20250207 22:01:58.670"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>last_name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.670" endtime="20250207 22:01:58.670"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>avatar</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.670" endtime="20250207 22:01:58.670"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${perfilUsuario}[id] &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250207 22:01:58.670" endtime="20250207 22:01:58.670"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[email]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.670" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20250207 22:01:58.670" endtime="20250207 22:01:58.670"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[first_name]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.671" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20250207 22:01:58.670" endtime="20250207 22:01:58.671"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[last_name]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.671" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20250207 22:01:58.671" endtime="20250207 22:01:58.671"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[avatar]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.671" level="INFO">Length is 39</msg>
<status status="PASS" starttime="20250207 22:01:58.671" endtime="20250207 22:01:58.671"/>
</kw>
<status status="PASS" starttime="20250207 22:01:58.669" endtime="20250207 22:01:58.671"/>
</iter>
<iter>
<var name="${perfilUsuario}">{'id': 6, 'email': 'tracey.ramos@reqres.in', 'first_name': 'Tracey', 'last_name': 'Ramos', 'avatar': 'https://reqres.in/img/faces/6-image.jpg'}</var>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.671" endtime="20250207 22:01:58.671"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>email</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.671" endtime="20250207 22:01:58.671"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>first_name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.671" endtime="20250207 22:01:58.671"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>last_name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.671" endtime="20250207 22:01:58.671"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${perfilUsuario}</arg>
<arg>avatar</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.671" endtime="20250207 22:01:58.672"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${perfilUsuario}[id] &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250207 22:01:58.672" endtime="20250207 22:01:58.672"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[email]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.672" level="INFO">Length is 22</msg>
<status status="PASS" starttime="20250207 22:01:58.672" endtime="20250207 22:01:58.672"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[first_name]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.672" level="INFO">Length is 6</msg>
<status status="PASS" starttime="20250207 22:01:58.672" endtime="20250207 22:01:58.672"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[last_name]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.672" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20250207 22:01:58.672" endtime="20250207 22:01:58.672"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${perfilUsuario}[avatar]</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.672" level="INFO">Length is 39</msg>
<status status="PASS" starttime="20250207 22:01:58.672" endtime="20250207 22:01:58.672"/>
</kw>
<status status="PASS" starttime="20250207 22:01:58.671" endtime="20250207 22:01:58.672"/>
</iter>
<status status="PASS" starttime="20250207 22:01:58.660" endtime="20250207 22:01:58.672"/>
</for>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${response.json()}</arg>
<arg>support</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.672" endtime="20250207 22:01:58.673"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${response.json()['support']}</arg>
<arg>url</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.673" endtime="20250207 22:01:58.673"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${response.json()['support']['url']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:01:58.673" level="INFO">Length is 79</msg>
<status status="PASS" starttime="20250207 22:01:58.673" endtime="20250207 22:01:58.673"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${response.json()['support']}</arg>
<arg>text</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:01:58.673" endtime="20250207 22:01:58.674"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.json()['support']['text']}</arg>
<arg>Tired of writing endless social media content? Let Content Caddy generate it for you.</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250207 22:01:58.674" endtime="20250207 22:01:58.674"/>
</kw>
<status status="PASS" starttime="20250207 22:01:58.657" endtime="20250207 22:01:58.674"/>
</kw>
<doc>Listar todos os usuários paginados</doc>
<tag>e2e</tag>
<status status="PASS" starttime="20250207 22:01:58.333" endtime="20250207 22:01:58.674"/>
</test>
<test id="s1-t2" name="Buscar um usuário específico existente" line="15">
<kw name="Dado que pesquise por um usuario específico" library="users_keywords">
<arg>1</arg>
<doc>Pesquisar por um usuario específico</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>nome=teste</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250207 22:01:58.676" level="INFO">${params} = {'nome': 'teste'}</msg>
<status status="PASS" starttime="20250207 22:01:58.675" endtime="20250207 22:01:58.676"/>
</kw>
<kw name="Request POST" library="settings">
<arg>${EP_USER}${user}</arg>
<arg>${params}</arg>
<doc>Request POST</doc>
<if>
<branch type="IF" condition="${params} == None">
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}${endpoint}</arg>
<arg>json=${data}</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" starttime="20250207 22:01:58.676" endtime="20250207 22:01:58.676"/>
</kw>
<status status="NOT RUN" starttime="20250207 22:01:58.676" endtime="20250207 22:01:58.676"/>
</branch>
<branch type="ELSE">
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}${endpoint}</arg>
<arg>json=${data}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20250207 22:01:59.356" level="INFO">POST Request : url=https://reqres.in/api/users/1?nome=teste 
 path_url=/api/users/1?nome=teste 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer QpwL5tke4Pnpja7X4', 'Content-Length': '57'} 
 body=b'{"email": "eve.holt@reqres.in", "password": "cityslicka"}' 
 </msg>
<msg timestamp="20250207 22:01:59.356" level="INFO">POST Response : url=https://reqres.in/api/users/1?nome=teste 
 status=201, reason=Created 
 headers={'Date': 'Sat, 08 Feb 2025 01:01:50 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '104', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738976510&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=i36Nb%2Bf%2F9%2Fj8X8BCLwwILTkWj%2F3y9J2SIJGBzy0V1fc%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738976510&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=i36Nb%2Bf%2F9%2Fj8X8BCLwwILTkWj%2F3y9J2SIJGBzy0V1fc%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Etag': 'W/"68-8jtMlIVl9NXGHl5tTsKEuq7r2C0"', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e7b0d62bfc6294-GRU', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=8026&amp;min_rtt=7857&amp;rtt_var=3285&amp;sent=5&amp;recv=5&amp;lost=0&amp;retrans=0&amp;sent_bytes=2835&amp;recv_bytes=967&amp;delivery_rate=442900&amp;cwnd=252&amp;unsent_bytes=0&amp;cid=a3b23cdfab604161&amp;ts=383&amp;x=0"'} 
 body={"email":"eve.holt@reqres.in","password":"cityslicka","id":"284","createdAt":"2025-02-08T01:01:50.712Z"} 
 </msg>
<msg timestamp="20250207 22:01:59.356" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20250207 22:01:58.676" endtime="20250207 22:01:59.356"/>
</kw>
<status status="PASS" starttime="20250207 22:01:58.676" endtime="20250207 22:01:59.356"/>
</branch>
<status status="PASS" starttime="20250207 22:01:58.676" endtime="20250207 22:01:59.356"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250207 22:01:59.356" level="INFO">${RESPONSE} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20250207 22:01:59.356" endtime="20250207 22:01:59.356"/>
</kw>
<status status="PASS" starttime="20250207 22:01:58.676" endtime="20250207 22:01:59.357"/>
</kw>
<status status="PASS" starttime="20250207 22:01:58.675" endtime="20250207 22:01:59.357"/>
</kw>
<kw name="Então é apresentado as informações do usuario pesquisado" library="users_keywords">
<doc>É apresentado as informações do usuario pesquisado</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPONSE.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20250207 22:01:59.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250207 22:01:59.357" endtime="20250207 22:01:59.358"/>
</kw>
<status status="PASS" starttime="20250207 22:01:59.357" endtime="20250207 22:01:59.358"/>
</kw>
<doc>Buscar um usuário específico existente</doc>
<tag>e2e</tag>
<status status="PASS" starttime="20250207 22:01:58.675" endtime="20250207 22:01:59.358"/>
</test>
<test id="s1-t3" name="Criar usuário com dados válidos" line="21">
<kw name="Dado que um novo usuario seja cadastrado" library="users_keywords">
<doc>Usuario seja cadastrado</doc>
<kw name="Request body" library="settings">
<arg>${PATH_USER_REGISTER}</arg>
<doc>Request body</doc>
<kw name="Load JSON From File" library="JSONLibrary">
<var>${data}</var>
<arg>${path}</arg>
<doc>Load JSON from file.</doc>
<msg timestamp="20250207 22:01:59.359" level="INFO">${data} = {'email': 'eve.holt@reqres.in', 'password': 'pistol'}</msg>
<status status="PASS" starttime="20250207 22:01:59.359" endtime="20250207 22:01:59.359"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${data}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250207 22:01:59.360" level="INFO">${data} = {'email': 'eve.holt@reqres.in', 'password': 'pistol'}</msg>
<status status="PASS" starttime="20250207 22:01:59.359" endtime="20250207 22:01:59.360"/>
</kw>
<status status="PASS" starttime="20250207 22:01:59.359" endtime="20250207 22:01:59.360"/>
</kw>
<kw name="Request POST" library="settings">
<arg>${EP_USER_REGISTER}</arg>
<doc>Request POST</doc>
<if>
<branch type="IF" condition="${params} == None">
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}${endpoint}</arg>
<arg>json=${data}</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20250207 22:02:00.047" level="INFO">POST Request : url=https://reqres.in/api/register 
 path_url=/api/register 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer QpwL5tke4Pnpja7X4', 'Content-Length': '53'} 
 body=b'{"email": "eve.holt@reqres.in", "password": "pistol"}' 
 </msg>
<msg timestamp="20250207 22:02:00.047" level="INFO">POST Response : url=https://reqres.in/api/register 
 status=200, reason=OK 
 headers={'Date': 'Sat, 08 Feb 2025 01:01:51 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '36', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738976511&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=ZtOpBJKMZBIJn1WCFn2TtxyfXngEZVO9%2BDntg2ZMcQc%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738976511&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=ZtOpBJKMZBIJn1WCFn2TtxyfXngEZVO9%2BDntg2ZMcQc%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Etag': 'W/"24-4iP0za1geN2he+ohu8F0FhCjLks"', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e7b0da8d6d621f-GRU', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=9646&amp;min_rtt=8865&amp;rtt_var=4888&amp;sent=5&amp;recv=6&amp;lost=0&amp;retrans=0&amp;sent_bytes=2836&amp;recv_bytes=953&amp;delivery_rate=269859&amp;cwnd=252&amp;unsent_bytes=0&amp;cid=898a9a7628e7e574&amp;ts=387&amp;x=0"'} 
 body={"id":4,"token":"QpwL5tke4Pnpja7X4"} 
 </msg>
<msg timestamp="20250207 22:02:00.047" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250207 22:01:59.360" endtime="20250207 22:02:00.047"/>
</kw>
<status status="PASS" starttime="20250207 22:01:59.360" endtime="20250207 22:02:00.047"/>
</branch>
<branch type="ELSE">
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}${endpoint}</arg>
<arg>json=${data}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" starttime="20250207 22:02:00.047" endtime="20250207 22:02:00.048"/>
</kw>
<status status="NOT RUN" starttime="20250207 22:02:00.047" endtime="20250207 22:02:00.048"/>
</branch>
<status status="PASS" starttime="20250207 22:01:59.360" endtime="20250207 22:02:00.048"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250207 22:02:00.048" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250207 22:02:00.048" endtime="20250207 22:02:00.048"/>
</kw>
<status status="PASS" starttime="20250207 22:01:59.360" endtime="20250207 22:02:00.048"/>
</kw>
<status status="PASS" starttime="20250207 22:01:59.359" endtime="20250207 22:02:00.048"/>
</kw>
<kw name="Então validar usuario cadastrado com sucesso" library="users_keywords">
<doc>Validar usuario cadastrado com sucesso</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPONSE.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20250207 22:02:00.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250207 22:02:00.049" endtime="20250207 22:02:00.049"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${RESPONSE.json()}</arg>
<arg>id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:02:00.049" endtime="20250207 22:02:00.049"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${RESPONSE.json()['id']} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250207 22:02:00.049" endtime="20250207 22:02:00.050"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${RESPONSE.json()}</arg>
<arg>token</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:02:00.050" endtime="20250207 22:02:00.050"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${RESPONSE.json()['token']}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250207 22:02:00.050" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20250207 22:02:00.050" endtime="20250207 22:02:00.050"/>
</kw>
<status status="PASS" starttime="20250207 22:02:00.048" endtime="20250207 22:02:00.050"/>
</kw>
<doc>Criar usuário com dados válidos</doc>
<tag>e2e</tag>
<status status="PASS" starttime="20250207 22:01:59.358" endtime="20250207 22:02:00.051"/>
</test>
<test id="s1-t4" name="Atualizar usuário existente com novos dados" line="28">
<kw name="Dado que atualize os dados do usuario" library="users_keywords">
<arg>2</arg>
<doc>atualizar os dados do usuario</doc>
<kw name="Request body" library="settings">
<arg>${PATH_USER_UPDATE}</arg>
<doc>Request body</doc>
<kw name="Load JSON From File" library="JSONLibrary">
<var>${data}</var>
<arg>${path}</arg>
<doc>Load JSON from file.</doc>
<msg timestamp="20250207 22:02:00.052" level="INFO">${data} = {'name': 'morpheus', 'job': 'zion resident'}</msg>
<status status="PASS" starttime="20250207 22:02:00.052" endtime="20250207 22:02:00.052"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${data}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250207 22:02:00.053" level="INFO">${data} = {'name': 'morpheus', 'job': 'zion resident'}</msg>
<status status="PASS" starttime="20250207 22:02:00.052" endtime="20250207 22:02:00.053"/>
</kw>
<status status="PASS" starttime="20250207 22:02:00.052" endtime="20250207 22:02:00.053"/>
</kw>
<kw name="Request PUT" library="settings">
<arg>${EP_USER_UPDATE}${idUsuario}</arg>
<doc>Request PUT</doc>
<if>
<branch type="IF" condition="${params} == None">
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}${endpoint}</arg>
<arg>json=${data}</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request.</doc>
<msg timestamp="20250207 22:02:00.726" level="INFO">PUT Request : url=https://reqres.in/api/users/2 
 path_url=/api/users/2 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer QpwL5tke4Pnpja7X4', 'Content-Length': '44'} 
 body=b'{"name": "morpheus", "job": "zion resident"}' 
 </msg>
<msg timestamp="20250207 22:02:00.726" level="INFO">PUT Response : url=https://reqres.in/api/users/2 
 status=200, reason=OK 
 headers={'Date': 'Sat, 08 Feb 2025 01:01:52 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738976512&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=kyuZSovVEzoXjRkbV5bP7vaxelMxn3A1IF1AHhfmMi4%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738976512&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=kyuZSovVEzoXjRkbV5bP7vaxelMxn3A1IF1AHhfmMi4%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Etag': 'W/"50-Jf9BShwKqQ+5Pc3RRpNCpy+9qJ4"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Vary': 'Accept-Encoding', 'Server': 'cloudflare', 'CF-RAY': '90e7b0decdfe1d17-GRU', 'Content-Encoding': 'gzip', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=7321&amp;min_rtt=7130&amp;rtt_var=3056&amp;sent=6&amp;recv=6&amp;lost=0&amp;retrans=0&amp;sent_bytes=2835&amp;recv_bytes=942&amp;delivery_rate=471022&amp;cwnd=252&amp;unsent_bytes=0&amp;cid=ef22242e02cdf321&amp;ts=377&amp;x=0"'} 
 body={"name":"morpheus","job":"zion resident","updatedAt":"2025-02-08T01:01:52.083Z"} 
 </msg>
<msg timestamp="20250207 22:02:00.726" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250207 22:02:00.053" endtime="20250207 22:02:00.726"/>
</kw>
<status status="PASS" starttime="20250207 22:02:00.053" endtime="20250207 22:02:00.726"/>
</branch>
<branch type="ELSE">
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}${endpoint}</arg>
<arg>json=${data}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request.</doc>
<status status="NOT RUN" starttime="20250207 22:02:00.726" endtime="20250207 22:02:00.726"/>
</kw>
<status status="NOT RUN" starttime="20250207 22:02:00.726" endtime="20250207 22:02:00.726"/>
</branch>
<status status="PASS" starttime="20250207 22:02:00.053" endtime="20250207 22:02:00.726"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250207 22:02:00.727" level="INFO">${RESPONSE} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250207 22:02:00.726" endtime="20250207 22:02:00.727"/>
</kw>
<status status="PASS" starttime="20250207 22:02:00.053" endtime="20250207 22:02:00.727"/>
</kw>
<status status="PASS" starttime="20250207 22:02:00.051" endtime="20250207 22:02:00.727"/>
</kw>
<kw name="Então validar dados do usuario atualizados" library="users_keywords">
<doc>Validar dados do usuario atualizados</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPONSE.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20250207 22:02:00.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250207 22:02:00.727" endtime="20250207 22:02:00.728"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${RESPONSE.json()}</arg>
<arg>name</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:02:00.728" endtime="20250207 22:02:00.729"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${RESPONSE.json()}</arg>
<arg>job</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:02:00.729" endtime="20250207 22:02:00.729"/>
</kw>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${RESPONSE.json()}</arg>
<arg>updatedAt</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20250207 22:02:00.729" endtime="20250207 22:02:00.729"/>
</kw>
<status status="PASS" starttime="20250207 22:02:00.727" endtime="20250207 22:02:00.729"/>
</kw>
<doc>Atualizar usuário existente com novos dados</doc>
<tag>e2e</tag>
<status status="PASS" starttime="20250207 22:02:00.051" endtime="20250207 22:02:00.730"/>
</test>
<test id="s1-t5" name="Excluir usuário existente" line="35">
<kw name="Dado que exclua um usuario" library="users_keywords">
<arg>1</arg>
<doc>Excluir um usuario</doc>
<kw name="Request DELETE" library="settings">
<arg>${EP_USER_DELETE}${idUsuario}</arg>
<doc>Request DELETE</doc>
<if>
<branch type="IF" condition="${params} == None">
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}${endpoint}</arg>
<arg>json=${data}</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20250207 22:02:01.446" level="INFO">DELETE Request : url=https://reqres.in/api/users/1 
 path_url=/api/users/1 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer QpwL5tke4Pnpja7X4', 'Content-Length': '44'} 
 body=b'{"name": "morpheus", "job": "zion resident"}' 
 </msg>
<msg timestamp="20250207 22:02:01.446" level="INFO">DELETE Response : url=https://reqres.in/api/users/1 
 status=204, reason=No Content 
 headers={'Date': 'Sat, 08 Feb 2025 01:01:52 GMT', 'Content-Length': '0', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1738976512&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=kyuZSovVEzoXjRkbV5bP7vaxelMxn3A1IF1AHhfmMi4%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1738976512&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=kyuZSovVEzoXjRkbV5bP7vaxelMxn3A1IF1AHhfmMi4%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'cf-cache-status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '90e7b0e319d1627a-GRU', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=8800&amp;min_rtt=8739&amp;rtt_var=3399&amp;sent=6&amp;recv=7&amp;lost=0&amp;retrans=0&amp;sent_bytes=2834&amp;recv_bytes=945&amp;delivery_rate=442132&amp;cwnd=252&amp;unsent_bytes=0&amp;cid=4666a63935f015f5&amp;ts=402&amp;x=0"'} 
 body=None 
 </msg>
<msg timestamp="20250207 22:02:01.447" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20250207 22:02:00.731" endtime="20250207 22:02:01.447"/>
</kw>
<status status="PASS" starttime="20250207 22:02:00.731" endtime="20250207 22:02:01.447"/>
</branch>
<branch type="ELSE">
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}${endpoint}</arg>
<arg>json=${data}</arg>
<arg>params=${params}</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request.</doc>
<status status="NOT RUN" starttime="20250207 22:02:01.447" endtime="20250207 22:02:01.447"/>
</kw>
<status status="NOT RUN" starttime="20250207 22:02:01.447" endtime="20250207 22:02:01.447"/>
</branch>
<status status="PASS" starttime="20250207 22:02:00.731" endtime="20250207 22:02:01.447"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPONSE}</arg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250207 22:02:01.448" level="INFO">${RESPONSE} = &lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20250207 22:02:01.447" endtime="20250207 22:02:01.448"/>
</kw>
<status status="PASS" starttime="20250207 22:02:00.730" endtime="20250207 22:02:01.448"/>
</kw>
<status status="PASS" starttime="20250207 22:02:00.730" endtime="20250207 22:02:01.448"/>
</kw>
<kw name="Então validar usuario excluido" library="users_keywords">
<doc>validar usuario excluido</doc>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPONSE.status_code}</arg>
<arg>204</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20250207 22:02:01.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250207 22:02:01.449" endtime="20250207 22:02:01.449"/>
</kw>
<status status="PASS" starttime="20250207 22:02:01.448" endtime="20250207 22:02:01.449"/>
</kw>
<doc>Excluir usuário existente</doc>
<tag>e2e</tag>
<status status="PASS" starttime="20250207 22:02:00.730" endtime="20250207 22:02:01.449"/>
</test>
<status status="PASS" starttime="20250207 22:01:57.503" endtime="20250207 22:02:01.450"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">e2e</stat>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="User">User</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
